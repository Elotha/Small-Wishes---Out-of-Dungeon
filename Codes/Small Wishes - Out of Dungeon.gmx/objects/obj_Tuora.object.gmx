<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Tuora_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create
{
    brightness=1 ;
    img_spd = 8/30;
    mov_spd = 5;
    sight = true;
    hor_mov = 0;
    ver_mov = 0;
    if global.checkR = room
    {
     x = global.checkx;
     y = global.checky;   
    }
    chat = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

{

    hor_mov = sign(keyboard_check_direct(vk_right)) - sign(keyboard_check_direct(vk_left));
    ver_mov = sign(keyboard_check_direct(vk_up)) - sign(keyboard_check_direct(vk_down)) ;
    
//    keyboard_check_direct(ord("vk_right")) - keyboard_check_direct(ord("vk_left")) = hor_mov;
//    keyboard_check_direct(ord("vk_up")) - keyboard_check_direct(ord("vk_down")) = ver_mov;


    //image_speed = 0;
    //image_index = 0
    if place_meeting(x,y,obj_Shadow) brightness = 0;
       else if place_meeting(x,y,obj_Light) brightness = 2;
            else brightness=1;

    if hor_mov = -1 &amp;&amp; !chat
    {
        if !collision_point(x-17,y-3,obj_Walk,true,true)
        {
            sprite_index = spr_Tuora_left
            x-=mov_spd
            image_speed = img_spd;
        } 
    }
    
    if hor_mov = 1 &amp;&amp; !chat
    {
        if !collision_point(x+17,y-3,obj_Walk,true,true)
        {
            sprite_index = spr_Tuora_right
            x+=mov_spd
            image_speed = img_spd;
        } 
    }
    
    if ver_mov = 1 &amp;&amp; !chat
    {
        if !collision_point(x,y-13,obj_Walk,true,true)
        {
            sprite_index = spr_Tuora_up
            y-=mov_spd
            image_speed = img_spd;
        } 
    }
    
    if ver_mov = -1 &amp;&amp; !chat
    {
        if !collision_point(x,y+13,obj_Walk,true,true)
        {
            sprite_index = spr_Tuora_down
            y+=mov_spd
            image_speed = img_spd;
        } 
    }
    
    if ver_mov = 0 &amp;&amp; hor_mov = 0
    {
        image_index = 0
        image_speed = 0
    }
    
    
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Location

{
    if place_meeting(x,y,obj_range) &amp;&amp; sight = true
    //instance_nearest(x,y,obj_range) 
    {    
//show_message("ss")
        switch(brightness)
        {
            case 0:

            
                 with(instance_nearest(x,y,obj_Guardian))
                 if point_distance(obj_Tuora.x,obj_Tuora.y,x,y) &lt; 32 
                 {
                    scr_distance();
                 }break;
                 
            case 2:
                 with(instance_nearest(x,y,obj_Guardian))
                 if point_distance(obj_Tuora.x,obj_Tuora.y,x,y) &lt; 112
                 {
                    scr_distance();
                 }break;
                 
            case 1:
                 with(instance_nearest(x,y,obj_Guardian))
                 if point_distance(obj_Tuora.x,obj_Tuora.y,x,y) &lt; 64 
                 {
                    scr_distance();
                 }break;
                 
        }
    }
    
    if brightness != 0 
    {
     if image_alpha &lt; 1 then image_alpha += 0.15 
     }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chest 
{

   if collision_point(x-17,y-3,obj_Chest,true,true) || collision_point(x+17,y-3,obj_Chest,true,true) || collision_point(x,y-13,obj_Chest,true,true) || collision_point(x,y+13,obj_Chest,true,true)
      {
      
          if keyboard_check_direct(ord('E'))
          {
              with(instance_nearest(x,y,obj_Chest))
              {
              sprite_index = spr_ChestOpen;
              }
          }
      
      
      }
  /*  if hor_mov = -1
    {
        if collision_point(x-17,y-3,obj_Chest,true,true)
        {
            ver_mov = 0 &amp;&amp; hor_mov = 0
        } 
    }
    
    if hor_mov = 1
    {
        if !collision_point(x+17,y-3,obj_Chest,true,true)
        {
            ver_mov = 0 &amp;&amp; hor_mov = 0
        } 
    }
    
    if ver_mov = 1
    {
        if !collision_point(x,y-13,obj_Chest,true,true)
        {
            ver_mov = 0 &amp;&amp; hor_mov = 0
        } 
    }
    
    if ver_mov = -1
    {
        if !collision_point(x,y+13,obj_Chest,true,true)
        {
            ver_mov = 0 &amp;&amp; hor_mov = 0
        } 
    }*/
   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Door
{

   if collision_point(x-17,y-3,obj_DoorVertical,true,true) || collision_point(x+17,y-3,obj_DoorVertical,true,true) || collision_point(x,y-13,obj_DoorVertical,true,true) || collision_point(x,y+13,obj_DoorVertical,true,true)
      {
      with(instance_nearest(x,y,obj_DoorVertical))
      {
      sprite_index = spr_DoorVertical2;
           //if collision_point(x-17,y-3,obj_DoorVertical,true,true) then image_xscale = -1
      }
      
      
      
      }
  /*  if hor_mov = -1
    {
        if collision_point(x-17,y-3,obj_DoorVertical,true,true)
        {
            ver_mov = 0 &amp;&amp; hor_mov = 0
        } 
    }
    
    if hor_mov = 1
    {
        if !collision_point(x+17,y-3,obj_DoorVertical,true,true)
        {
            ver_mov = 0 &amp;&amp; hor_mov = 0
        } 
    }
    
    if ver_mov = 1
    {
        if !collision_point(x,y-13,obj_DoorVertical,true,true)
        {
            ver_mov = 0 &amp;&amp; hor_mov = 0
        } 
    }
    
    if ver_mov = -1
    {
        if !collision_point(x,y+13,obj_DoorVertical,true,true)
        {
            ver_mov = 0 &amp;&amp; hor_mov = 0
        } 
    }*/
   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GoTalk

{

    if collision_circle(x,y-16,64,obj_sign,true,true)
    {
        if keyboard_check_pressed(ord('F'))
        {  
           //show_message(view_hview[0]);
           //show_message(view_hport[0]);
            with(instance_nearest(x,y,obj_sign))
            {
                if !instance_exists(dialog)
                { 
                    //dialog = instance_create(x+xoffset,y+yoffset,obj_Dialogue);
                    dialog = instance_create(view_xview[0],view_yview[0]+view_hview-96,obj_Dialogue);
                    dialog.text = text; //check it
                    dialog.talker = talker;
                }
                
                else
                {
                    dialog.text_page ++;
                    dialog.text_count = 0;}
                    
                if (dialog.text_page &gt; array_length_1d(dialog.text)-1)
                {
                    with(dialog)
                    {
                        instance_destroy();
                    }
                }     

                
            }
            
            
            
            /*var talker, receiver
            global.talker = collision_circle(x,y-16,64,obj_Uratun,true,true);
            global.receiver = self;
            scr_dialog();
            chat = true;*/

        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checkpoint---

{

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement_meh---
/*
{
    sign(keyboard_check_direct(vk_right)) - sign(keyboard_check_direct(vk_left)) = hor_mov;
    sign(keyboard_check_direct(vk_up)) - sign(keyboard_check_direct(vk_down)) = ver_mov;


    //image_speed = 0;
    //image_index = 0
    if place_meeting(x,y,obj_Shadow) brightness = 0;
       else if place_meeting(x,y,obj_Light) brightness = 2;
            else brightness=1;

    switch(keyboard_key)
    {
        case vk_left:
        case ord("A"):
        if !collision_point(x-16,y-3,obj_Walk,true,true)
        {
            sprite_index = spr_Tuora_left
            x-=mov_spd
            image_speed = img_spd;
        };
        
        case vk_right:
        case ord("D"):
        if !collision_point(x+17,y-3,obj_Walk,true,true)
        {
            sprite_index = spr_Tuora_right
            x+=mov_spd
            image_speed = img_spd;
        } ;
        break;
        
        case vk_down:
        case ord("S"):
        if !collision_point(x,y+13,obj_Walk,true,true)
        {
            sprite_index = spr_Tuora_down
            y+=mov_spd
            image_speed = img_spd;
        };
        
        case vk_up:
        case ord("W"):
        if !collision_point(x,y-13,obj_Walk,true,true)
        {
            sprite_index = spr_Tuora_up
            y-=mov_spd
            image_speed = img_spd;
        };
        break;
        
        default: 
        image_speed = 0;
        image_index = 0;break;
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///test_brightness---

{

 //   show_debug_message(brightness);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_WallVertical">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///alpha

{
    with(other)
    {        
        if image_alpha &gt; 0.4 then image_alpha -= 0.07;// else image_alpha = 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Checkpoint">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check, please !

{    
     if global.checkpoint != other.id &amp;&amp; other.image_index = 0
        {
            with(other)
            {
            global.checkpoint = id
            global.checkx = x
            global.checkR = room
            global.checky = y
            }
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Shadow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///alpha

{

    if image_alpha &gt; 0.03 then image_alpha -= 0.04;// else image_alpha = 1

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 1;
show_message(global.checkpoint.x);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if image_alpha &gt; 0.5 then image_alpha -= 0.04;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check_down
/*{

    if !collision_point(x,y+13,obj_Walk,true,true) then y+=10
    if place_meeting(x,y,obj_Shadow) brightness = 0;
       else if place_meeting(x,y,obj_Light) brightness = 2;
            else brightness=1;
            
    //image_speed = obj_Guardian.img_spd;
            
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-y</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check_right
/*{

    if !collision_point(x+17,y-3,obj_Walk,true,true) then x+=10
    if place_meeting(x,y,obj_Shadow) brightness = 0;
       else if place_meeting(x,y,obj_Light) brightness = 2;
            else brightness=1;
            
            
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check_up
/*{

    if !collision_point(x,y-13,obj_Walk,true,true) then y-=10
    if place_meeting(x,y,obj_Shadow) brightness = 0;
       else if place_meeting(x,y,obj_Light) brightness = 2;
            else brightness=1;
            
    //image_speed = img_spd;
            
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-y</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check_left
/*{
    
    if !collision_point(x-16,y-3,obj_Walk,true,true) then x-=10
    if place_meeting(x,y,obj_Shadow) brightness = 0;
       else if place_meeting(x,y,obj_Light) brightness = 2;
            else brightness=1;
         
    //image_speed = img_spd;
       
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// test distance_guard
/*{
    draw_self();
    if point_distance(obj_range.x,obj_range.y,x,y) &lt; 150 
    {
    draw_line(obj_range.x,obj_range.y,x,y);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw_caught

{
    if !sight draw_sprite(spr_warning,0,x,y-38);

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shadow_alpha

    draw_self();

    if brightness = 0
    
    {
    
        if sprite_index = spr_Tuora_left //hor_mov = -1
        {
            draw_sprite(spr_TuoraEyes_left,0,x,y)
        }
        
        if sprite_index = spr_Tuora_right //hor_mov = 1
        {
            draw_sprite(spr_TuoraEyes_right,0,x,y)
        }
        
        if ver_mov = 1
        {
            draw_self();
        }
        
        if sprite_index = spr_Tuora_down //ver_mov = -1
        {
        draw_sprite(spr_TuoraEyes_down,0,x,y)
        }
    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
