<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_range</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
{


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///obj_range
{

    x=guardian.x;
    y=guardian.y;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///location---
/*{
    if place_meeting(x,y,obj_Tuora) 
    {
        switch(obj_Tuora.brightness)
        {
            case 0:
                 scr_distance(32);
                 
            case 2:
                 scr_distance(112);
                       
            case 1:
                 scr_distance(64);
                 
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///location---
{    
    //if place_meeting(obj_Tuora.x,obj_Tuora.y,obj_range)
    if  collision_point(obj_Tuora.x,obj_Tuora.y,obj_Guardian.range,true,true) 
    {
        show_message("heyaa");
        switch(obj_Tuora.brightness)
        {
            case 0:
            
                 if point_distance(obj_Tuora.x,obj_Tuora.y,x,y) &lt; 32 &amp;&amp; !collision_line(obj_Tuora.x,obj_Tuora.y,x,y,obj_Box,true,true)
                 {
                    scr_distance();
                 }
                 
            case 2:
                 if point_distance(obj_Tuora.x,obj_Tuora.y,x,y) &lt; 112 &amp;&amp; !collision_line(obj_Tuora.x,obj_Tuora.y,x,y,obj_Box,true,true)
                 {
                    scr_distance();
                 }
                 
            case 1:
                 if point_distance(obj_Tuora.x,obj_Tuora.y,x,y) &lt; 64 &amp;&amp; !collision_line(obj_Tuora.x,obj_Tuora.y,x,y,obj_Box,true,true)
                 {
                    //scr_distance();
                    room_restart();
                 }
                 
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///look

{

    switch(guardian.sprite_index)
        {
            case spr_Guardian_left: image_angle=-90;break;
            case spr_Guardian_right: image_angle=+90;break;
            case spr_Guardian_up: image_angle=+180;break;
            case spr_Guardian_down: image_angle=0;break;
        }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Tuora">
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hadi_gulum---
/*{
 show_message("cmoon");
    switch(obj_Tuora.brightness)
        {
            case 0:
            
                 if point_distance(obj_Tuora.x,obj_Tuora.y,x,y) &lt; 32 &amp;&amp; !collision_line(obj_Tuora.x,obj_Tuora.y,x,y,obj_Box,true,true)
                 {
                    scr_distance();
                 }
                 
            case 2:
                 if point_distance(obj_Tuora.x,obj_Tuora.y,x,y) &lt; 112 &amp;&amp; !collision_line(obj_Tuora.x,obj_Tuora.y,x,y,obj_Box,true,true)
                 {
                    scr_distance();
                 }
                 
            case 1:
                 if point_distance(obj_Tuora.x,obj_Tuora.y,x,y) &lt; 64 &amp;&amp; !collision_line(obj_Tuora.x,obj_Tuora.y,x,y,obj_Box,true,true)
                 {
                    //scr_distance();
                    room_restart();
                 }
        }
}        
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> draw_self();
    /*if point_distance(x,y,obj_Tuora.x,obj_Tuora.y) &lt; 130
    {
    draw_line(obj_Tuora.x,obj_Tuora.y,x,y);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
